@model Job_Requests.Models.ViewModels.JobTypePaginationVM

@{
	ViewData["Title"] = "Job Types";
	var statusStyle = string.Empty;
	var badgeStyle = string.Empty;
}

<div class="container">
	<div class="row justify-content-center">
		<div class="col-md-12">
			<!-- Card Header -->
			<div class="card shadow-lg rounded">
				<div class="card-header bg-primary text-white text-center py-3">
					<h4 class="mb-0"><i class="bi bi-clipboard"></i> @ViewData["Title"]</h4>
				</div>

				<!-- Card Body -->
				<div class="card-body p-3">
					<div class="d-flex flex-column flex-md-row justify-content-between align-items-center mb-4">
						<!-- Buttons Section (Left) -->
						<div class="d-flex mb-3 mb-md-0">
							<a asp-action="Create" class="btn btn-success me-2 shadow">
								<i class="bi bi-plus-square-fill"></i> Create
							</a>
							<a asp-action="Print" class="btn btn-primary shadow">
								<i class="bi bi-printer-fill"></i> Print
							</a>
						</div>

						<!-- Search Section (Right) -->
						<div class="d-flex justify-content-end">
							<div class="search-container w-100">
								<input type="text" class="search-box form-control" placeholder="Search..." autofocus />
								<i class="search-icon fas fa-search"></i>
							</div>
						</div>
					</div>
					<div class="table-responsive">
						<table class="table table-striped table-hover">
							<thead>
								<tr class="table-primary">
									<th>
										Name
									</th>
									<th>
										Description
									</th>
									<th class="text-center">
										Status
									</th>
									<th class="text-center">Actions</th>
								</tr>
							</thead>
							<tbody>
								@foreach (var item in Model.JobTypes)
								{
									<tr class="table-light">
										<td>
											<strong>@Html.DisplayFor(modelItem => item.JobTypeName)</strong>
										</td>
										<td>
											@Html.DisplayFor(modelItem => item.JobTypeDescription)
										</td>
										<td class="text-center">
											@if (item.Status == RecordStatusEnum.Active)
											{

												<i class="bi bi-eye-fill fa-2x text-success" data-bs-toggle="tooltip" data-bs-placement="top" title="Active"></i>

											}
											else
											{

												<i class="bi bi-eye-slash-fill fa-2x text-danger" data-bs-toggle="tooltip" data-bs-placement="top" title="Inactive"></i>

											}
										</td>
										<td class="text-center">
											@if (item.Status == RecordStatusEnum.Active)
											{
												<a asp-action="Edit" asp-route-id="@item.JobTypeId" class="btn btn-outline-success shadow my-md-1 mt-sm-1 mb-sm-1 mb-1"
												   data-bs-toggle="tooltip" data-bs-placement="top" title="Edit Record">
													<i class="bi bi-pencil-square"></i>
												</a>
											}
											else
											{
												<a asp-action="Edit" asp-route-id="@item.JobTypeId" class="btn btn-secondary disabled my-md-1 mb-sm-1 mb-1"
												   data-bs-toggle="tooltip" data-bs-placement="top" title="Edit Record">
													<i class="bi bi-pencil-square"></i>
												</a>
											}

											<a asp-action="Details" asp-route-id="@item.JobTypeId" class="btn btn-outline-primary shadow my-md-1 mb-sm-1 mb-1"
											   data-bs-toggle="tooltip" data-bs-placement="top" title="Record Details">
												<i class="bi bi-info-square"></i>
											</a>
											<a asp-action="Manage" asp-route-id="@item.JobTypeId" class="btn btn-outline-warning shadow my-md-1 mb-sm-1 mb-1"
											   data-bs-toggle="tooltip" data-bs-placement="top" title="Manage Status">
												<i class="bi bi-gear"></i>
											</a>
											<a asp-action="Delete" asp-route-id="@item.JobTypeId" class="btn btn-outline-danger shadow delete-btn my-md-1"
											   data-bs-toggle="tooltip" data-bs-placement="top" title="Delete Record" data-id="@item.JobTypeId">
												<i class="bi bi-trash"></i>
											</a>
										</td>
									</tr>
								}
							</tbody>
						</table>
					</div>

					<!-- Pagination Section -->
					@if (Model.JobTypes.Count() > 0)
					{
						<div class="d-flex justify-content-between align-items-center">
							<ul class="pagination">

								@if (Model.CurrentPage > 1)
								{
									<li class="page-item">
										<a class="page-link" href="@Url.Action("Index",new  { page = Model.CurrentPage - 1 })">&laquo;</a>
									</li>
								}
								else
								{
									<li class="page-item disabled">
										<a class="page-link" href="#">&laquo;</a>
									</li>
								}

								@for (int i = 1; i <= Model.TotalPages; i++)
								{
									<li class="page-item @(i == Model.CurrentPage? "active": "")">
										<a class="page-link" href="@Url.Action("Index",new { page = i })">@i</a>
									</li>
								}


								@if (Model.CurrentPage < Model.TotalPages)
								{
									<li class="page-item">
										<a class="page-link" href="@Url.Action("Index",new { page = Model.CurrentPage + 1 })">&raquo;</a>
									</li>
								}
								else
								{
									<li class="page-item disabled">
										<a class="page-link" href="#">&raquo;</a>
									</li>
								}
							</ul>

							<span class="pagination-count">
								Page @Model.CurrentPage of @Model.TotalPages |
								@Model.RecordCount out of @Model.TotalJobTypes
							</span>

						</div>


						@* 	<div>
					<ul class="pagination">
					<li class="page-item disabled">
					<a class="page-link" href="#">&laquo;</a>
					</li>
					<li class="page-item active">
					<a class="page-link" href="#">1</a>
					</li>
					<li class="page-item">
					<a class="page-link" href="#">2</a>
					</li>
					<li class="page-item">
					<a class="page-link" href="#">3</a>
					</li>
					<li class="page-item">
					<a class="page-link" href="#">4</a>
					</li>
					<li class="page-item">
					<a class="page-link" href="#">5</a>
					</li>
					<li class="page-item">
					<a class="page-link" href="#">&raquo;</a>
					</li>
					</ul>
					</div> *@
					}
					<!--End of Pagination -->


				</div>
			</div>
		</div>
	</div>
</div>


@*
@section Scripts {
	<script>
		// Attach the click event to all delete buttons
		document.querySelectorAll('.delete-btn').forEach(button => {
			button.addEventListener('click', function (event) {
				event.preventDefault();  // Prevent the default action (the link click)

				// Get the job request ID from the data-id attribute
				var jobTypeId = this.getAttribute('data-id');

				// Show SweetAlert confirmation
				Swal.fire({
					title: "Are you sure?",
					text: "Do you want to delete this department? You won't be able to revert this!",
					icon: "warning",
					showCancelButton: true,
					confirmButtonColor: "#d33",
					confirmButtonText: "Proceed Deletion",
					cancelButtonText: "Cancel"
				}).then((result) => {
					if (result.isConfirmed) {
						// Redirect to the delete action
						window.location.href = '/JobType/Delete/' + jobTypeId;
					}
				});
			});
		});
	</script>
} *@