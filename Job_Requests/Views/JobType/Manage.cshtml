@model Job_Requests.Models.JobType

@{
	ViewData["Title"] = "Manage Job Type";
}

<div class="container py-5">
	<div class="row justify-content-center">
		<div class="col-md-8 col-lg-6">
			<!-- Card -->
			<div class="card shadow-lg rounded">
				<!-- Card Header -->
				<div class="card-header bg-primary text-white text-center py-4">
					<h4 class="mb-0"><i class="bi bi-gear-fill"></i> @ViewData["Title"]</h4>
				</div>

				<!-- Card Body -->
				<div class="card-body p-3">
					<form asp-action="Manage" id="manageForm">

						<!-- Validation Summary -->
						<div asp-validation-summary="ModelOnly" class="text-danger"></div>
						<input type="hidden" asp-for="JobTypeId" />
						<input type="hidden" asp-for="Status" />

						<div class="form-group mb-3">
							<label asp-for="JobTypeName" class="control-label fw-bold"></label>
							<input asp-for="JobTypeName" class="form-control" readonly />
							<span asp-validation-for="JobTypeName" class="text-danger"></span>
						</div>

						<div class="form-group mb-3">
							<label asp-for="JobTypeDescription" class="control-label fw-bold"></label>
							<textarea asp-for="JobTypeDescription" class="form-control" style="height: 150px;" readonly></textarea>
							<span asp-validation-for="JobTypeDescription" class="text-danger"></span>
						</div>

						<div class="form-group mb-3 col-md-6 col-sm-12">
							<label asp-for="CreatedDate" class="control-label fw-bold"></label>
							<input asp-for="CreatedDate" class="form-control" readonly />
						</div>

						<!-- Display Current Status -->
						<div class="form-group">
							<label class="control-label fw-bold">Current Status:</label>
							<p class="form-control-static" id="recordStatus">
								@if (Model.Status == RecordStatusEnum.Active)
								{
									<span class="text-success"><strong>Active</strong></span>
								}
								else
								{
									<span class="text-danger"><strong>Inactive</strong></span>
								}
							</p>
						</div>


						<!-- Submit/Back Button -->
						<div class="form-group d-flex justify-content-between mt-3">
							@if (Model.Status == RecordStatusEnum.Active)
							{
								<button type="submit" class="btn btn-danger shadow">
									<i class="bi bi-file-earmark-excel"></i>
									Deactivate
								</button>
							}
							else
							{
								<button type="submit" class="btn btn-success shadow">
									<i class="bi bi-check2-square"></i>
									Activate
								</button>
							}

							<a asp-action="Index" class="btn btn-outline-dark shadow"><i class="bi bi-arrow-left-square"></i> Back</a>
						</div>
					</form>
				</div>
			</div>
		</div>
	</div>
</div>


@section Scripts {

	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}

	<script>

		document.getElementById('manageForm').addEventListener('submit', function (e) {
			e.preventDefault(); // Prevent the form from actually submitting

			let paragraphText = document.getElementById('recordStatus').textContent;


			// Show SweetAlert confirmation
			Swal.fire({
				title: paragraphText.trim().toUpperCase() === "ACTIVE" ? "Confirm Deactivation" : "Confirm Activation",
				icon: "question",
				text: paragraphText.trim().toUpperCase() === "ACTIVE" ? "Do you want this to be INACTIVE?" : "Do you want this to be ACTIVE?",
				showCancelButton: true,
				confirmButtonText: paragraphText.trim().toUpperCase() === "ACTIVE" ? "Deactivate" : "Activate",
				confirmButtonColor: paragraphText.trim().toUpperCase() === "ACTIVE" ? "#d33" : "#28a745",
				cancelButtonText: "Cancel"
			}).then((result) => {
				if (result.isConfirmed) {
					// If confirmed, submit the form
					document.getElementById('manageForm').submit();
				}
			});
		});
	</script>

}
