@model IEnumerable<Job_Requests.Models.Department>

@{
	ViewData["Title"] = "Departments";
	var statusStyle = string.Empty;
	var badgeStyle = string.Empty;
}

<div class="container py-5">
	<div class="row justify-content-center">
		<div class="col-md-12">
			<!-- Card Header -->
			<div class="card shadow-lg rounded">
				<div class="card-header bg-primary text-white text-center py-4">
					<h4 class="mb-0"><i class="bi bi-building"></i> @ViewData["Title"]</h4>
				</div>

				<!-- Card Body -->
				<div class="card-body p-3">
					<div class="d-flex justify-content-between align-items-center mb-4">
						<div>
							<a asp-action="Create" class="btn btn-success me-2 shadow"><i class="bi bi-plus-square-fill"></i> Create</a>
							<a asp-action="Print" class="btn btn-primary shadow"><i class="bi bi-printer-fill"></i> Print</a>
						</div>
					</div>

					<table class="table table-striped table-hover table-responsive">
						<thead>
							<tr class="table-primary">
								<th>
									@Html.DisplayNameFor(model => model.DepartmentName)
								</th>
								<th>
									@Html.DisplayNameFor(model => model.DepartmentDescription)
								</th>
								<th class="text-center">
									@Html.DisplayNameFor(model => model.Status)
								</th>
								<th class="text-center">Actions</th>
							</tr>
						</thead>
						<tbody>
							@foreach (var item in Model)
							{
								<tr class="table-light">
									<td>
										<strong>@Html.DisplayFor(modelItem => item.DepartmentName)</strong>
									</td>
									<td>
										@Html.DisplayFor(modelItem => item.DepartmentDescription)
									</td>
									<td class="text-center">
										@if (item.Status == RecordStatusEnum.Active)
										{

											<i class="bi bi-eye-fill fa-2x text-success" data-bs-toggle="tooltip" data-bs-placement="right" title="Active"></i>

										}
										else
										{

											<i class="bi bi-eye-slash-fill fa-2x text-danger" data-bs-toggle="tooltip" data-bs-placement="right" title="Inactive"></i>

										}
									</td>
									<td class="text-center">
										@if (item.Status == RecordStatusEnum.Active)
										{
											<a asp-action="Edit" asp-route-id="@item.DepartmentId" class="btn btn-outline-success shadow"
											   data-bs-toggle="tooltip" data-bs-placement="left" title="Edit Record">
												<i class="bi bi-pencil-square"></i>
											</a>
										}
										else
										{
											<a asp-action="Edit" asp-route-id="@item.DepartmentId" class="btn btn-secondary disabled"
											   data-bs-toggle="tooltip" data-bs-placement="left" title="Edit Record">
												<i class="bi bi-pencil-square"></i>
											</a>
										}

										<a asp-action="Details" asp-route-id="@item.DepartmentId" class="btn btn-outline-primary shadow"
										   data-bs-toggle="tooltip" data-bs-placement="top" title="Record Details">
											<i class="bi bi-info-square"></i>
										</a>
										<a asp-action="Manage" asp-route-id="@item.DepartmentId" class="btn btn-outline-warning shadow"
										   data-bs-toggle="tooltip" data-bs-placement="bottom" title="Manage Status">
											<i class="bi bi-gear"></i>
										</a>
										<a asp-action="Delete" asp-route-id="@item.DepartmentId" class="btn btn-outline-danger shadow delete-btn"
										   data-bs-toggle="tooltip" data-bs-placement="right" title="Delete Record" data-id="@item.DepartmentId">
											<i class="bi bi-trash"></i>
										</a>
									</td>
								</tr>
							}
						</tbody>
					</table>
	
				</div>
			</div>
		</div>
	</div>
</div>


@section Scripts {
	<script>
		// Attach the click event to all delete buttons
		document.querySelectorAll('.delete-btn').forEach(button => {
			button.addEventListener('click', function (event) {
				event.preventDefault();  // Prevent the default action (the link click)

				// Get the job request ID from the data-id attribute
				var DepartmentId = this.getAttribute('data-id');

				// Show SweetAlert confirmation
				Swal.fire({
					title: "Are you sure?",
					text: "Do you want to delete this department? You won't be able to revert this!",
					icon: "warning",
					showCancelButton: true,
					confirmButtonColor:  "#d33",
					confirmButtonText: "Proceed Deletion",
					cancelButtonText: "Cancel"
				}).then((result) => {
					if (result.isConfirmed) {
						// Make an AJAX POST request to the controller to delete the department
						fetch('/Department/Delete', {
							method: 'POST',
							headers: {
								'Content-Type': 'application/json',
								'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value // Anti-forgery token
							},
							body: JSON.stringify({ DepartmentId: DepartmentId })
						})
							.then(response => {
								if (response.ok) {
									// Successfully deleted, you can redirect or refresh the page
									Swal.fire(
										'Deleted!',
										'The department has been deleted.',
										'success'
									).then(() => {
										location.reload(); // Optionally reload the page or redirect
									});
								} else {
									Swal.fire(
										'Error!',
										'There was an issue deleting the department.',
										'error'
									);
								}
							})
							.catch(error => {
								Swal.fire(
									'Error!',
									'An error occurred during the deletion process.',
									'error'
								);
							});
					}
				});
			});
		});
	</script>
}