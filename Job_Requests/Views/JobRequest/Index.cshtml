@model IEnumerable<Job_Requests.Models.JobRequest>

@{
	ViewData["Title"] = "Job Requests";
	var statusStyle = string.Empty;
}

<div class="container py-5">
	<div class="row justify-content-center">
		<div class="col-md-12">
			<!-- Card Header -->
			<div class="card shadow-lg rounded">
				<div class="card-header bg-primary text-white text-center py-4">
					<h4 class="mb-0"><i class="bi bi-briefcase"></i> @ViewData["Title"]</h4>
				</div>

				<!-- Card Body -->
				<div class="card-body p-3">
					<div class="d-flex justify-content-between align-items-center mb-4">
						<div>
							<a asp-action="Create" class="btn btn-success me-2 shadow"><i class="bi bi-plus-square-fill"></i> Create</a>
							<a asp-action="Print" class="btn btn-primary shadow"><i class="bi bi-printer-fill"></i> Print</a>
						</div>
					</div>

					<table class="table table-striped table-hover table-responsive">
						<thead>
							<tr class="table-primary">
								<th>@Html.DisplayNameFor(model => model.Department)</th>
								<th>@Html.DisplayNameFor(model => model.JobDescription)</th>
								<th>@Html.DisplayNameFor(model => model.RequestDate)</th>
								<th>@Html.DisplayNameFor(model => model.DateCompleted)</th>
								<th class="text-center">@Html.DisplayNameFor(model => model.Status)</th>
								<th class="text-center">Actions</th>
							</tr>
						</thead>
						<tbody>
							@foreach (var item in Model)
							{
								<tr class="table-light">
									<td><strong>@Html.DisplayFor(modelItem => item.Department.DepartmentName)</strong></td>
									<td>@Html.DisplayFor(modelItem => item.JobDescription)</td>
									<td>@Html.DisplayFor(modelItem => item.RequestDate)</td>
									<td>@Html.DisplayFor(modelItem => item.DateCompleted)</td>

									<!-- Status Badge -->
									<td class="text-center">
										@switch (item.Status)
										{
											case JobStatusEnum.Pending:
												statusStyle = "bg-secondary";
												break;
											case JobStatusEnum.InProgress:
												statusStyle = "bg-primary";
												break;
											case JobStatusEnum.Completed:
												statusStyle = "bg-success";
												break;
											case JobStatusEnum.Cancelled:
												statusStyle = "bg-danger";
												break;
										}

										<span class="badge rounded-pill @statusStyle">
											@Html.DisplayFor(modelItem => item.Status)
										</span>
									</td>

									<!-- Action Buttons -->
									<td class="text-center">
										@if (item.Status == JobStatusEnum.Pending)
										{
											<a asp-action="Edit" asp-route-id="@item.JobRequestId" class="btn btn-outline-success shadow"
											   data-bs-toggle="tooltip" data-bs-placement="left" title="Edit Record">
												<i class="bi bi-pencil-square"></i>
											</a>
										}
										else
										{
											<a asp-action="Edit" asp-route-id="@item.JobRequestId" class="btn btn-secondary shadow disabled">
												<i class="bi bi-pencil-square"></i>
											</a>
										}

										<a asp-action="Details" asp-route-id="@item.JobRequestId" class="btn btn-outline-primary shadow"
										   data-bs-toggle="tooltip" data-bs-placement="top" title="Show Details">
											<i class="bi bi-info-square"></i>
										</a>
										<a asp-action="Manage" asp-route-id="@item.JobRequestId" class="btn btn-outline-warning shadow"
										   data-bs-toggle="tooltip" data-bs-placement="bottom" title="Manage Status">
											<i class="bi bi-gear"></i>
										</a>
										<a asp-action="Delete" asp-route-id="@item.JobRequestId" class="btn btn-outline-danger shadow"
										   data-bs-toggle="tooltip" data-bs-placement="right" title="Delete Record">
											<i class="bi bi-trash"></i>
										</a>
									</td>
								</tr>
							}
						</tbody>
					</table>
				</div>
			</div>
		</div>
	</div>
</div>

